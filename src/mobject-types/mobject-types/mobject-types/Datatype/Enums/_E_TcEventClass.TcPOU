<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_E_TcEventClass" Id="{471576f3-b48f-07a6-2ce9-bec3ed0b1208}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _E_TcEventClass EXTENDS EnumDatatypeBase
VAR
	localData : E_TcEventClass;
	activeData : REFERENCE TO E_TcEventClass;
	enumBaseType : _UINT(localData);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{4965a941-ebc6-04aa-279e-784348efc51a}" />
    <Folder Name="Private" Id="{e0601e2a-3429-0f91-1247-86fd4b3b4f04}" />
    <Folder Name="Protected" Id="{c4478634-198b-045d-1155-06fa960ed092}" />
    <Method Name="AddLocalEnumeration" Id="{17d30d11-4814-0576-2518-704160afbd29}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE AddLocalEnumeration
VAR_INPUT
	Enumeration : T_MAXSTRING;
	Value : E_TcEventClass;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddEnumeration(Enumeration, Value);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Address" Id="{1d329e9c-f48e-0351-2aa3-a8470e232819}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{ca009cd8-6c85-05bf-3d62-2eb67f1b521e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{fbbe2b4f-27f0-0e70-207f-2ed5e3cdc9d4}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseTypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{6a73999d-fb6f-0005-1751-3e4c3de5eec3}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _E_TcEventClass;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_E_TcEventClass(InitialValue := Value));
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{be7d1aa0-da55-06d9-3b79-df6704562b60}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : E_TcEventClass;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;
AddBaseType(enumBaseType);
ClearReference();

AddLocalEnumeration('TCEVENTCLASS_NONE', E_TcEventClass.TCEVENTCLASS_NONE);
AddLocalEnumeration('TCEVENTCLASS_MAINTENANCE', E_TcEventClass.TCEVENTCLASS_MAINTENANCE);
AddLocalEnumeration('TCEVENTCLASS_MESSAGE', E_TcEventClass.TCEVENTCLASS_MESSAGE);
AddLocalEnumeration('TCEVENTCLASS_HINT', E_TcEventClass.TCEVENTCLASS_HINT);
AddLocalEnumeration('TCEVENTCLASS_STATEINFO', E_TcEventClass.TCEVENTCLASS_STATEINFO);
AddLocalEnumeration('TCEVENTCLASS_INSTRUCTION', E_TcEventClass.TCEVENTCLASS_INSTRUCTION);
AddLocalEnumeration('TCEVENTCLASS_WARNING', E_TcEventClass.TCEVENTCLASS_WARNING);
AddLocalEnumeration('TCEVENTCLASS_ALARM', E_TcEventClass.TCEVENTCLASS_ALARM);
AddLocalEnumeration('TCEVENTCLASS_PARAMERROR', E_TcEventClass.TCEVENTCLASS_PARAMERROR);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{3c531f9f-7bba-0bdc-270f-63c34525bf56}">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{6931461f-9bf4-0140-076c-bd19fee5d2a0}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'E_TcEventClass';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="IsEnumeratorValueEqual" Id="{e587899d-0111-01f6-0d4e-b39716b305ae}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD IsEnumeratorValueEqual : BOOL
VAR_INPUT
	Enumerator : I_KeyValueForwardEnumerator;
END_VAR
VAR
	storedValue : E_TcEventClass;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Enumerator.TryGet(storedValue) THEN
	RETURN;
END_IF

IsEnumeratorValueEqual := storedValue = activeData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MakeReferenceTo" Id="{962a76af-0ef9-082b-38a6-c111d967ea75}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO E_TcEventClass;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseTypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseTypeReference" Id="{4ba5fb2b-4a39-0976-1873-2b67ce47094a}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseTypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumBaseType.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{598c4e78-a793-0fe5-2ba2-409ebc3c70b4}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{87c98983-908e-02f1-1866-b50e41754b5e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{ca1c33bf-4a21-088c-12b7-2fb1e32f82d9}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsEnum : I_EnumDatatype;
	pTargetData : POINTER TO E_TcEventClass;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsEnumType(targetAsEnum) THEN
	RETURN;
END_IF

IF targetAsEnum.Identifier <> Identifier THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseTypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{b6607d69-d692-0e7b-3ec8-9a8e055b9e7e}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : E_TcEventClass]]></Declaration>
      <Get Name="Get" Id="{967184aa-a47c-0f61-3d04-9d09d1637dfc}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{3e48387b-b5c9-0ee3-1843-40dbdf1b036b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>