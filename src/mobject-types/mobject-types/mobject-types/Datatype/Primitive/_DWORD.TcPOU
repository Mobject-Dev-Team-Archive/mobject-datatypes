<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_DWORD" Id="{e1618592-474c-06e9-0256-241d293fb756}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _DWORD EXTENDS DatatypeBase
VAR
	localData : DWORD;
	activeData : REFERENCE TO DWORD REF= localData;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{6081fa35-d0fa-0615-3e40-6bcf9d5ab0f5}" />
    <Property Name="Address" Id="{01b8a490-6357-09f2-2e3c-649a590225d1}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{e9fac61d-1033-05e8-074e-76511964a6c1}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{2686ad7e-f5b0-0f52-0463-92f748609987}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{bda15bdb-e191-0a8e-0b6c-fbf8237ba1f0}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _DWORD;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_DWORD(InitialValue := Value));
Clone := pClone^;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{f444b33f-03c6-0d22-0fb3-60f155eabc87}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved WORDo the copy code (online change)
	InitialValue : DWORD;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;]]></ST>
      </Implementation>
    </Method>
    <Property Name="IecType" Id="{a92004d4-57cd-00a6-11ea-2ced8b55ecde}">
      <Declaration><![CDATA[PROPERTY PUBLIC IecType : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{59a1ab44-0ba1-0a61-2660-8b986cb2fee7}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IecType := 'DWORD';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="MakeReferenceTo" Id="{a1615478-51ec-04c4-0e04-7c313069d850}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO DWORD;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeWith" Id="{de88edbc-c461-0b88-0417-7a9c62325ef3}">
      <Declaration><![CDATA[METHOD PUBLIC SerializeWith
VAR_INPUT
	Serializer : I_Serializer;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.AddDword(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{b30aeff7-7b0e-00a1-2cf0-7d67c573dbab}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{2c501a58-5289-0996-0022-21a91459fb34}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryDeserializeFrom" Id="{6e5bd969-ed5b-05c7-106e-ef5452ab356f}">
      <Declaration><![CDATA[METHOD TryDeserializeFrom : BOOL
VAR_INPUT
	Deserializer : I_Deserializer;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryDeserializeFrom := Deserializer.TryGetDword(activeData, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryMakeReferenceTo" Id="{17213b48-96d7-0d48-04f0-2302e78f4a45}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	pTargetData : POINTER TO DWORD;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT (Target.IecType = IecType) THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{d615ead0-e05e-0f6d-34dc-cb0a584b413e}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : DWORD]]></Declaration>
      <Get Name="Get" Id="{b9f0dd16-4ed7-0445-385c-2902d495500b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{c3676747-46e7-0cba-221a-91ced1a88394}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>