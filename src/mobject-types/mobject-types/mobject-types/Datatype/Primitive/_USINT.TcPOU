<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_USINT" Id="{73d9601c-574b-01d1-23fa-d23608a3f39d}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _USINT EXTENDS IntegerDatatypeBase
VAR
	localData : USINT;
	activeData : REFERENCE TO USINT REF= localData;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{8ea448e0-ef12-02b0-09a6-a0d856d04e10}" />
    <Folder Name="Protected" Id="{1ed7207d-e002-0dc3-332e-b0a87b68dafd}" />
    <Property Name="Address" Id="{c6c4df9a-ed9d-0878-0493-207e41e8a267}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{aed9dd39-95b9-0a36-0d45-aa6e7e12e1fd}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{21ba2945-92c3-019d-043a-7783a1082725}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{df97922d-f0b2-02bf-2307-02d5de55f866}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _USINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_USINT(InitialValue := Value));
Clone := pClone^;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Datatype" Id="{e4dae87d-f3e5-0db5-2664-254a92afcf0a}">
      <Declaration><![CDATA[PROPERTY PUBLIC Datatype : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{4db4257f-630e-088b-31d7-2c9341d8f5b9}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Datatype := 'USINT';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="FB_init" Id="{d6617acf-b88a-0d8d-1863-8dfae5b8e461}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : USINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;]]></ST>
      </Implementation>
    </Method>
    <Property Name="IsSigned" Id="{565b8ea5-e91d-034b-2d9e-384be0641ee4}">
      <Declaration><![CDATA[PROPERTY PUBLIC IsSigned : BOOL]]></Declaration>
      <Get Name="Get" Id="{afce97f5-cffd-0e62-1ccd-290c826f7694}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IsSigned := FALSE;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="LowerBound" Id="{6c27902b-4877-0efd-2b1a-4b58d78a7eca}">
      <Declaration><![CDATA[PROPERTY PUBLIC LowerBound : USINT]]></Declaration>
      <Get Name="Get" Id="{337ec03c-69ae-000e-33ee-08ff1a87e75a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[LowerBound := DatatypeLimits.USINT_LOWER_LIMIT;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="MakeReferenceTo" Id="{7160aee3-8c59-0f96-1d92-b5d6ffc1710e}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO USINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeLowerbound" Id="{1e39da27-6e92-041f-0a01-a6c4e2c43df0}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SerializeLowerbound
VAR_INPUT
	Serializer : I_Serializer;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.AddUsint(Lowerbound);]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeUpperbound" Id="{d728a4da-06b4-09af-1b2e-471147ab5360}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SerializeUpperbound
VAR_INPUT
	Serializer : I_Serializer;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.AddUsint(Upperbound);]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeWith" Id="{fa2ec0ce-951b-0bad-147a-00375cea3f94}">
      <Declaration><![CDATA[METHOD PUBLIC SerializeWith
VAR_INPUT
	Serializer : I_Serializer;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.AddUsint(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{d8011a71-b0ed-0106-3a73-7aad696a0038}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{6e611b70-7153-03fa-24c8-1a6fa7f9ecab}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryDeserializeFrom" Id="{9491981d-c6cd-07bd-0538-6e067b4c6752}">
      <Declaration><![CDATA[METHOD TryDeserializeFrom : BOOL
VAR_INPUT
	Deserializer : I_Deserializer;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryDeserializeFrom := Deserializer.TryGetUsint(activeData, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryMakeReferenceTo" Id="{8b0b5ccc-8127-02e6-025f-dccf2058d158}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	pTargetData : POINTER TO USINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT (Target.Datatype = Datatype) THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="UpperBound" Id="{2eea0796-0182-0419-1e4a-573abcf6a0f2}">
      <Declaration><![CDATA[PROPERTY PUBLIC UpperBound : USINT]]></Declaration>
      <Get Name="Get" Id="{f9fcb19b-922c-01db-216d-087c3f5794ad}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[UpperBound :=  DatatypeLimits.USINT_UPPER_LIMIT;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Value" Id="{c58e94f1-6676-00ff-043e-8bb7a8e13261}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : USINT]]></Declaration>
      <Get Name="Get" Id="{1d887d9e-eb5a-0289-0fc4-9e5c5b1c4ca7}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{b25991f3-88b1-0f6e-2f45-128fb27b28f1}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>