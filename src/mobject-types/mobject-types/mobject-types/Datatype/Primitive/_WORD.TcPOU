<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_WORD" Id="{e7bccc65-ec8e-095b-18a1-42a50d575606}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _WORD EXTENDS IntegerDatatypeBase
VAR
	localData : WORD;
	activeData : REFERENCE TO WORD REF= localData;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{9855b4c7-dd4b-091f-048e-197bbbc3d1ff}" />
    <Folder Name="Protected" Id="{b34490c2-bb4e-0a98-3762-7800e375c2f8}" />
    <Property Name="Address" Id="{8506bb2c-de33-0776-279b-8f3e62d4e41f}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{624c1396-e620-080b-0ec9-5d90a0cf661b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{107fc361-cc8f-01f3-0be2-6be785ad8651}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{24c77b7d-908b-0d82-37f7-3e8e4bfd466a}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _WORD;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_WORD(InitialValue := Value));
Clone := pClone^;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Datatype" Id="{aa0f3556-0005-0473-258e-203dbe03d661}">
      <Declaration><![CDATA[PROPERTY PUBLIC Datatype : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{5a893654-cf12-012c-03b2-d2c7473b6d47}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Datatype := 'WORD';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="FB_init" Id="{88882bf8-9a7d-01b3-21ce-f4d80e61d67d}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved WORDo the copy code (online change)
	InitialValue : WORD;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;]]></ST>
      </Implementation>
    </Method>
    <Property Name="IsSigned" Id="{96d86a49-520a-0392-1a1a-182d4c10e643}">
      <Declaration><![CDATA[PROPERTY PUBLIC IsSigned : BOOL]]></Declaration>
      <Get Name="Get" Id="{0781a2d4-dc39-0cb5-1c3a-f6fc40192460}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IsSigned := FALSE;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="LowerBound" Id="{4d4b9a56-70e2-0600-333b-3f7ff212e82f}">
      <Declaration><![CDATA[PROPERTY PUBLIC LowerBound : WORD]]></Declaration>
      <Get Name="Get" Id="{448a6f22-a07a-08c0-005e-0928e68a7545}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[LowerBound := DatatypeLimits.WORD_LOWER_LIMIT;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="MakeReferenceTo" Id="{c68ef1de-2ec4-03cf-262f-3ed89ab93621}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO WORD;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeLowerbound" Id="{def6bec4-991f-0698-0fa4-8347d885eaa1}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SerializeLowerbound
VAR_INPUT
	Serializer : I_Serializer;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.AddLint(Lowerbound);]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeUpperbound" Id="{fec56ae9-7bc3-0e54-39af-41f4f60bb574}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SerializeUpperbound
VAR_INPUT
	Serializer : I_Serializer;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.AddLint(Upperbound);]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeWith" Id="{f1af31b2-031b-0cef-0af3-bc734e479124}">
      <Declaration><![CDATA[METHOD PUBLIC SerializeWith
VAR_INPUT
	Serializer : I_Serializer;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.AddWord(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{4f1f6c93-bfc9-0181-03ad-e942dcc5d704}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{2306413c-09e9-0d25-12a8-21d69e8cb935}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryDeserializeFrom" Id="{c337f86f-3d51-0565-1456-61c27ff55c65}">
      <Declaration><![CDATA[METHOD TryDeserializeFrom : BOOL
VAR_INPUT
	Deserializer : I_Deserializer;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryDeserializeFrom := Deserializer.TryGetWord(activeData, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryMakeReferenceTo" Id="{6584c998-95ea-019d-215d-408811ee36f4}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	pTargetData : POINTER TO WORD;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT (Target.Datatype = Datatype) THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="UpperBound" Id="{72e47270-7d75-0e51-3f93-c507285a1f03}">
      <Declaration><![CDATA[PROPERTY PUBLIC UpperBound : WORD]]></Declaration>
      <Get Name="Get" Id="{f7ebd023-5aba-0674-32e7-764c86ae73a5}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[UpperBound :=  DatatypeLimits.WORD_UPPER_LIMIT;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Value" Id="{058c9661-e32a-0fab-0644-75834aa01d79}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : WORD]]></Declaration>
      <Get Name="Get" Id="{0f16fb52-a5db-061a-278c-bb5743ba8ee2}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{3a8f4c76-f9ec-099c-21f1-cf58433b5ed9}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>