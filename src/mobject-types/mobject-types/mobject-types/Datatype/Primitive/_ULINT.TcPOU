<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_ULINT" Id="{c7898852-3f8c-06ea-37d8-fdb1eefce63a}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ULINT EXTENDS IntegerDatatypeBase
VAR
	localData : ULINT;
	activeData : REFERENCE TO ULINT REF= localData;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{c056bdcf-aa40-02f2-177e-270978828ede}" />
    <Folder Name="Protected" Id="{e31aa3f5-6766-075e-3ec1-51cdaa3906b9}" />
    <Property Name="Address" Id="{e633fbea-6deb-07a1-0f6b-d3d8dd5ece97}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{afe0d9d2-7d19-05aa-0752-b3b7e2c677da}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{29033a30-bfed-0588-36c1-d883e0c55df2}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{7904eb54-5a5e-0db0-0d3d-2dba99f8e7c1}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ULINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ULINT(InitialValue := Value));
Clone := pClone^;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Datatype" Id="{47bd40c2-540b-0011-12d3-a3542e29e63d}">
      <Declaration><![CDATA[PROPERTY PUBLIC Datatype : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{f24b824f-7f93-056a-3ca6-5b9baea73d1c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Datatype := 'ULINT';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="FB_init" Id="{c56a88d2-c768-0b03-1c92-8f5cec67c152}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : ULINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;]]></ST>
      </Implementation>
    </Method>
    <Property Name="IsSigned" Id="{75e0dece-c871-0ada-03d1-569478bc9ae6}">
      <Declaration><![CDATA[PROPERTY PUBLIC IsSigned : BOOL]]></Declaration>
      <Get Name="Get" Id="{b72acb2c-9416-0074-0851-ec8dd8cb543c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IsSigned := FALSE;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="LowerBound" Id="{2b5124b7-c4b8-07a2-01ee-2bbc83277354}">
      <Declaration><![CDATA[PROPERTY PUBLIC LowerBound : ULINT]]></Declaration>
      <Get Name="Get" Id="{e2455522-3265-0484-03f2-f2715c53694d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[LowerBound := DatatypeLimits.ULINT_LOWER_LIMIT;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="MakeReferenceTo" Id="{27b89260-d794-0105-263d-7c750ae1e15f}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ULINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeLowerbound" Id="{06666c40-7115-0593-257e-7ea5cb9c8d05}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SerializeLowerbound
VAR_INPUT
	Serializer : I_Serializer;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.AddUlint(Lowerbound);]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeUpperbound" Id="{43843877-346d-0ebd-34a6-ec5ecb7f5c6f}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SerializeUpperbound
VAR_INPUT
	Serializer : I_Serializer;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.AddUlint(Upperbound);]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeWith" Id="{6efedb8d-ee30-00ea-0b6d-8e64df3fd52f}">
      <Declaration><![CDATA[METHOD PUBLIC SerializeWith
VAR_INPUT
	Serializer : I_Serializer;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.AddUlint(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{f7802e2e-e844-04b3-278f-6b3a96c74472}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{135cfe1d-99e7-0c73-3f30-fa288c706f6a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryDeserializeFrom" Id="{0b0ad417-a689-0263-08b8-8a3b54693546}">
      <Declaration><![CDATA[METHOD TryDeserializeFrom : BOOL
VAR_INPUT
	Deserializer : I_Deserializer;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryDeserializeFrom := Deserializer.TryGetUlint(activeData, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryMakeReferenceTo" Id="{1ba40e25-354a-054d-2471-d4811c1c7d48}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	pTargetData : POINTER TO ULINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT (Target.Datatype = Datatype) THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="UpperBound" Id="{377ba917-fc59-0030-293a-70175826ab29}">
      <Declaration><![CDATA[PROPERTY PUBLIC UpperBound : ULINT]]></Declaration>
      <Get Name="Get" Id="{27ef2049-0590-0dfc-2ed3-19751e227321}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[UpperBound :=  DatatypeLimits.ULINT_UPPER_LIMIT;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Value" Id="{4dda2ae8-674a-0fb8-2bf8-7e756f7ae32e}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : ULINT]]></Declaration>
      <Get Name="Get" Id="{c8a59718-4109-0b1f-2727-4c90670fc004}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{d99615b2-e08b-04bb-2005-0a910135f29c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>