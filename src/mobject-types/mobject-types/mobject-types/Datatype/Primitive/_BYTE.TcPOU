<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_BYTE" Id="{e13d121b-bd62-0560-097a-3e5feecc5072}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _BYTE EXTENDS IntegerDatatypeBase
VAR
	localData : BYTE;
	activeData : REFERENCE TO BYTE REF= localData;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{dc71c8d8-8bad-0b2f-1886-a977c787c52a}" />
    <Folder Name="Protected" Id="{f54e313b-326b-0482-2c1f-8c0521f17afa}" />
    <Property Name="Address" Id="{f2e0369d-48aa-0c8c-378c-0c91c2f56d29}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{b4cc134a-3bec-012d-2bbf-cb13109027c0}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{121d0580-6312-0a4f-1a1c-f5fe66a2899c}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{dc8e0d1e-55f5-0842-047e-f15bd7a09fa9}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _BYTE;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_BYTE(InitialValue := Value));
Clone := pClone^;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Datatype" Id="{b759aa94-a5b0-01fd-1026-3b9c5163545f}">
      <Declaration><![CDATA[PROPERTY PUBLIC Datatype : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{b25d9fe7-34b6-0bf7-1d19-809c4f852417}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Datatype := 'BYTE';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="FB_init" Id="{a785ae6c-d603-0491-3e55-1f1d883a3483}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : BYTE;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;]]></ST>
      </Implementation>
    </Method>
    <Property Name="IsSigned" Id="{5f752aa4-46b1-0bf5-2346-e13d214b4c6c}">
      <Declaration><![CDATA[PROPERTY PUBLIC IsSigned : BOOL]]></Declaration>
      <Get Name="Get" Id="{03ad0359-1427-0709-3bd3-49da7d12749b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IsSigned := FALSE;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="LowerBound" Id="{702a37da-5388-0cf4-1a77-e4ae19f50e32}">
      <Declaration><![CDATA[PROPERTY PUBLIC LowerBound : BYTE]]></Declaration>
      <Get Name="Get" Id="{5eb7210c-cacc-0075-37e0-bdfacc2d4d8b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[LowerBound := DatatypeLimits.BYTE_LOWER_LIMIT;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="MakeReferenceTo" Id="{1194c713-fa02-0963-3c38-a33329d2e971}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO BYTE;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeLowerbound" Id="{3d64b178-5391-0c49-0ec7-800ff68aa1e2}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SerializeLowerbound
VAR_INPUT
	Serializer : I_Serializer;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.AddByte(Lowerbound);]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeUpperbound" Id="{e38c8705-f60d-0230-2328-4dc1757ec735}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SerializeUpperbound
VAR_INPUT
	Serializer : I_Serializer;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.AddByte(Upperbound);]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeWith" Id="{ce033144-9640-0e3b-105f-bb3dedbaae10}">
      <Declaration><![CDATA[METHOD PUBLIC SerializeWith
VAR_INPUT
	Serializer : I_Serializer;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.AddByte(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{7118941b-d712-0bd8-3634-1cd14de487f4}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{090f7c60-a453-040e-3a93-be81f09e9970}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryDeserializeFrom" Id="{dc689cea-9720-0e96-0099-0e00b481e8db}">
      <Declaration><![CDATA[METHOD TryDeserializeFrom : BOOL
VAR_INPUT
	Deserializer : I_Deserializer;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryDeserializeFrom := Deserializer.TryGetByte(activeData, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryMakeReferenceTo" Id="{b82a0370-078a-06f0-3f24-9faedfef32a8}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	pTargetData : POINTER TO BYTE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT (Target.Datatype = Datatype) THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="UpperBound" Id="{b4a397f5-afd4-0de8-05f9-d2b582203212}">
      <Declaration><![CDATA[PROPERTY PUBLIC UpperBound : BYTE]]></Declaration>
      <Get Name="Get" Id="{c5ec5d77-ef03-0aec-00f8-25fbef476b7e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[UpperBound := DatatypeLimits.BYTE_UPPER_LIMIT;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Value" Id="{a5489d9a-7007-0386-1faa-cbebec92d708}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : BYTE]]></Declaration>
      <Get Name="Get" Id="{f332786d-a0ed-0f82-2d05-c66f07b20122}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{408e24c5-953c-00fd-21f0-a1b6b7fb178d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>