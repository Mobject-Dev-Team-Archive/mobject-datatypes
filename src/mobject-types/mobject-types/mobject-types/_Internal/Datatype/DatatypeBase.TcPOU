<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="DatatypeBase" Id="{caf70741-0fda-4312-8507-6bdd6e0bf45b}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK ABSTRACT DatatypeBase EXTENDS Disposable IMPLEMENTS I_Datatype
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Accept" Id="{dd871bbb-4ec4-0283-1fd2-71cc24047cd6}">
      <Declaration><![CDATA[METHOD PUBLIC Accept
VAR_INPUT
	Visitor : I_DatatypeVisitor;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Visitor.VisitDatatype(this^);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Address" Id="{d51246f1-c326-4bd3-ad2b-6abdbcc9c6a3}">
      <Declaration><![CDATA[PROPERTY PUBLIC ABSTRACT Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{75c65319-5779-49e1-ac09-d48067a51f26}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{4259927f-6f52-00ed-02eb-e8cf594481d2}">
      <Declaration><![CDATA[METHOD PUBLIC ABSTRACT ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{7af27274-3902-4c83-b5c8-4b63225091df}">
      <Declaration><![CDATA[METHOD PUBLIC ABSTRACT Clone : I_Datatype
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Property Name="IecType" Id="{4e6b709c-3c41-0f61-1dc2-0d8936572b7d}">
      <Declaration><![CDATA[PROPERTY PUBLIC ABSTRACT IecType : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{0619a35f-75ef-01ba-106d-74a7e27a44d7}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="SerializeTypeWith" Id="{d792640c-a39f-4b1c-9df5-bece16fc714d}">
      <Declaration><![CDATA[METHOD PUBLIC SerializeTypeWith
VAR_INPUT
	Serializer : I_Serializer;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.StartObject();
Serializer.AddKeyString('type',IecType);
Serializer.EndObject();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeWith" Id="{52279ac4-78de-4c93-a829-75eb4e6edb6e}">
      <Declaration><![CDATA[METHOD PUBLIC ABSTRACT SerializeWith
VAR_INPUT
	Serializer : I_Serializer;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{d5f34be1-cf1e-4cd3-abd8-f6af95068bbf}">
      <Declaration><![CDATA[PROPERTY PUBLIC ABSTRACT Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{fecee7eb-1948-431d-976e-3ca35711d21b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryCopy" Id="{ff5a7101-aefc-4015-bfe6-0f0bdfd3b844}">
      <Declaration><![CDATA[METHOD PUBLIC TryCopy : BOOL
VAR_INPUT
	Source : I_Datatype;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Source.IecType <> IecType THEN
	RETURN;
END_IF

memcpy(Address, Source.Address, Size);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryDeserializeFrom" Id="{eeb476e5-73e9-46e1-b773-fda92a913dc4}">
      <Declaration><![CDATA[METHOD PUBLIC ABSTRACT TryDeserializeFrom : BOOL
VAR_INPUT
	Deserializer : I_Deserializer;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryMakeReferenceTo" Id="{aed9eb80-ebc5-03fc-0ecc-e5fedc065442}">
      <Declaration><![CDATA[METHOD PUBLIC ABSTRACT TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryResolveAsAliasType" Id="{55ca9292-ffda-0855-259b-60ba4748a149}">
      <Declaration><![CDATA[METHOD PUBLIC TryResolveAsAliasType : BOOL
VAR_INPUT
	Destination : REFERENCE TO I_AliasDatatype;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryResolveAsAliasType := FALSE;
RETURN;]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryResolveAsStructuredType" Id="{ec909d59-647a-0183-1246-435cce0f434c}">
      <Declaration><![CDATA[METHOD PUBLIC TryResolveAsStructuredType : BOOL
VAR_INPUT
	Destination : REFERENCE TO I_StructuredDatatype;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryResolveAsStructuredType := FALSE;
RETURN;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>