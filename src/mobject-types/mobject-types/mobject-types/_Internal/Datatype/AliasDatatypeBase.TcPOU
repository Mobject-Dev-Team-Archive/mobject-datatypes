<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="AliasDatatypeBase" Id="{51efc251-d562-035f-0714-2cb40d22bd49}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK ABSTRACT AliasDatatypeBase EXTENDS UserDefinedDatatypeBase IMPLEMENTS I_AliasDatatype
VAR
	_baseType : I_Datatype;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Protected" Id="{32e64345-9794-024b-1b99-8f3ce9518447}" />
    <Method Name="AddBaseType" Id="{75762eda-cb7a-071b-0eb1-7f2a098f1636}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED AddBaseType
VAR_INPUT
	BaseType : I_Datatype;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_baseType := BaseType;]]></ST>
      </Implementation>
    </Method>
    <Property Name="BaseType" Id="{3a1b6a1c-2ed1-4f30-b499-6a6e905bbab5}">
      <Declaration><![CDATA[PROPERTY PUBLIC BaseType : I_Datatype]]></Declaration>
      <Get Name="Get" Id="{cac64592-d854-4fdc-8853-dc04b5c5a68c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[BaseType := _baseType;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Datatype" Id="{4522de90-f1b5-0fc0-0e0b-23cb79104913}">
      <Declaration><![CDATA[PROPERTY PUBLIC Datatype : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{87e770ed-14bd-0fd2-0898-258431f34b50}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Datatype := 'ALIAS';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="OnSerializeTypeWith" Id="{17eb0ffc-aa3f-0e76-3822-35cc42214923}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED OnSerializeTypeWith
VAR_INPUT
	Serializer : I_Serializer;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.OnSerializeTypeWith(Serializer);
Serializer.AddKey('baseType');
_baseType.SerializeTypeWith(Serializer);]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeWith" Id="{0e1207a2-8592-4c4b-9710-52ccdb73d294}">
      <Declaration><![CDATA[METHOD PUBLIC SerializeWith
VAR_INPUT
	Serializer : I_Serializer;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_baseType.SerializeWith(Serializer);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryDeserializeFrom" Id="{d02555e8-a46e-47c3-9f23-7110e9393468}">
      <Declaration><![CDATA[METHOD TryDeserializeFrom : BOOL
VAR_INPUT
	Deserializer : I_Deserializer;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryDeserializeFrom := _baseType.TryDeserializeFrom(Deserializer, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryResolveAsAliasType" Id="{8b7c7d86-c00c-052e-0c75-6034d6f85e34}">
      <Declaration><![CDATA[METHOD PUBLIC TryResolveAsAliasType : BOOL
VAR_INPUT
	Destination : REFERENCE TO I_AliasDatatype;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Destination := THIS^;
TryResolveAsAliasType := TRUE;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>