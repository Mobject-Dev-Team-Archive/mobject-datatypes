<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_HRESULT" Id="{812bad4a-7bd2-0ca8-1e32-53ad4f652147}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _HRESULT EXTENDS AliasDatatypeBase
VAR
	localData : HRESULT;
	activeData : REFERENCE TO HRESULT REF= localData;
	aliasBaseType : _DINT(localData);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{c86d702f-77a8-0c2d-2692-85b706f92094}" />
    <Folder Name="Protected" Id="{ad40f793-9b3d-4478-aa9d-0319dd4f7560}" />
    <Property Name="Address" Id="{eaea8ce2-d780-069a-2354-b9040dbfdf59}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{9ca66335-2df6-0b97-035a-cfdc96d663e4}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{3b3306cf-50f2-0e29-0162-910cb3f73574}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{3e05ef98-5afd-4b49-b284-8e3d2d8200da}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _HRESULT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_HRESULT(InitialValue := Value));
Clone := pClone^;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{86e1a4c2-65f3-05c8-1412-88763e434d4e}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : HRESULT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{783e0e3e-7447-0c8f-3ba4-419752f4a16d}">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{48ca57da-3d4d-0ccb-0db1-4ab3be926971}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'HRESULT';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="InitializeBaseType" Id="{13e14335-59c8-4817-abfb-1cdbed05ddb5}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED InitializeBaseType
VAR_INPUT
	BaseType : REFERENCE TO I_Datatype;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[BaseType := aliasBaseType;]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReferenceOf" Id="{b812282b-13cf-0ccc-1aff-702feb80c71d}">
      <Declaration><![CDATA[METHOD PUBLIC ReferenceOf
VAR_INPUT
	ReferenceTarget : HRESULT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{78fc7983-bbf0-072e-3bed-9c1f413ab6ff}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{1ef01c66-9a0c-0188-28d6-15ce2d32f45d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceOf" Id="{43bcd589-1009-0f1a-3a87-0d5bc8645b2a}">
      <Declaration><![CDATA[METHOD TryMakeReferenceOf : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	pTargetData : POINTER TO HRESULT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT (Target.IecType = IecType) THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
TryMakeReferenceOf := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{85c486dd-d750-0c76-00cb-4c376724f1d2}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : HRESULT]]></Declaration>
      <Get Name="Get" Id="{d04c4bc3-8e0b-04d3-3b2c-700ab80225ae}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{44e9d433-2f91-0b46-3692-b60205dde3fd}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>