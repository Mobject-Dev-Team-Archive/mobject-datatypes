<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_BOOL" Id="{73f2c26e-32e9-46f5-a312-2927d449c86e}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _BOOL EXTENDS DatatypeBase
VAR
	localData : BOOL;
	activeData : REFERENCE TO BOOL REF= localData;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{39988db6-a8a1-475d-94a6-59b54070f4c4}" />
    <Property Name="Address" Id="{4148f607-b9df-4d1a-bf8e-18043a110c15}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{456d7a9f-e62e-4265-b148-685ad336bdb8}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{2c9e366f-88fb-029e-3dc8-beea96060188}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{a0f61c7d-9075-49a5-ae2f-6fa56ea65ce9}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_BOOL(InitialValue := Value));
Clone := pClone^;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{b9c2f4cc-3d64-49ec-b0f9-94f6b91f63cf}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{72af1979-c8a6-44ae-8e4c-a01801501cf1}">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{3733e778-83b4-4688-aec0-b56df0af7a48}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'BOOL';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="IecType" Id="{4cdd9b75-726e-0315-350b-ae8f0e86020d}">
      <Declaration><![CDATA[PROPERTY PUBLIC IecType : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{544ed6ae-fb08-0637-3ffd-c81c2b8876fa}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IecType := 'BOOL';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ReferenceOf" Id="{300ca044-2f72-0cc4-22f3-fecb0789a110}">
      <Declaration><![CDATA[METHOD PUBLIC ReferenceOf
VAR_INPUT
	ReferenceTarget : REFERENCE TO BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeWith" Id="{0c38b446-0e15-4d4f-ad5d-632b1b0e0167}">
      <Declaration><![CDATA[METHOD PUBLIC SerializeWith
VAR_INPUT
	Serializer : I_Serializer;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.AddBool(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{b7f8d582-eff3-4ad7-b504-ea24c9d0588e}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{0cded36b-91a1-4cad-b4de-a6bed829e204}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryDeserializeFrom" Id="{a78fdf0d-71c4-4c7c-8b8a-311686fb692b}">
      <Declaration><![CDATA[METHOD TryDeserializeFrom : BOOL
VAR_INPUT
	Deserializer : I_Deserializer;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryDeserializeFrom := Deserializer.TryGetBool(activeData);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryMakeReferenceOf" Id="{7005b362-8e83-054d-2624-d6bbb82e7b1c}">
      <Declaration><![CDATA[METHOD TryMakeReferenceOf : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	pTargetData : POINTER TO BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT (Target.Identifier = Identifier) THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
TryMakeReferenceOf := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{c45fd22d-2330-40b4-b235-05bd28ec9ac2}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : BOOL]]></Declaration>
      <Get Name="Get" Id="{a72ad693-3f18-4a62-84e1-00ad91e8acdd}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{27a77381-a71a-4ebc-98ab-bbd5cc9c7e44}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>