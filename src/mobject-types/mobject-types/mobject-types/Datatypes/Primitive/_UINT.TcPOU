<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_UINT" Id="{cbed6cf7-fbf8-097c-0293-0e7f1c3f5467}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _UINT EXTENDS DatatypeBase
VAR
	localData : UINT;
	activeData : REFERENCE TO UINT REF= localData;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{b7e865a1-de9f-0ea8-18fd-e29ef0580957}" />
    <Property Name="Address" Id="{22c7e2a6-d61f-0110-0341-9057da1fd006}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{7898a754-28c6-0cd8-1f19-a87a05a0cb89}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{baf875f5-1f23-045a-3d3a-d0a7a2635b26}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{2d944782-2ce6-050d-19bd-069bc8760853}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _UINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_UINT(InitialValue := Value));
Clone := pClone^;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{d1ec7ebf-bb74-0a8f-11a3-1e265fb5d1fa}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : UINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;]]></ST>
      </Implementation>
    </Method>
    <Property Name="IecType" Id="{c80358ad-9725-00b1-21f9-51d714de8890}">
      <Declaration><![CDATA[PROPERTY PUBLIC IecType : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{2aeddd07-38df-08d7-2365-4a94eb18b542}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IecType := 'UINT';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="MakeReferenceTo" Id="{2af064f3-480e-0bca-2a47-db6bdc774210}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO UINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeWith" Id="{5f5154f1-dfb8-0779-035e-90f3ccd5434b}">
      <Declaration><![CDATA[METHOD PUBLIC SerializeWith
VAR_INPUT
	Serializer : I_Serializer;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.AddUdint(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{818d689a-c1e5-0e2e-00c7-72cee1d29c58}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{f74b3f26-9c14-08a6-1d9e-5e5266d43f5f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryDeserializeFrom" Id="{964046c2-bce0-0078-0712-c6b8f5581b56}">
      <Declaration><![CDATA[METHOD TryDeserializeFrom : BOOL
VAR_INPUT
	Deserializer : I_Deserializer;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryDeserializeFrom := Deserializer.TryGetUint(activeData, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryMakeReferenceTo" Id="{052e8ae9-d393-02c4-0feb-8bd1204f1259}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	pTargetData : POINTER TO UINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT (Target.IecType = IecType) THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{de8c7a46-b714-0d21-2f16-eba009ade7c8}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : UINT]]></Declaration>
      <Get Name="Get" Id="{ba0296e2-b2da-0c10-39df-84db5623f947}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{d73e9a79-7509-0f01-11c7-35ddcd43c48b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>