<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_INT" Id="{e1db94ec-2dc4-44cc-ade8-bd509d56f134}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _INT EXTENDS DatatypeBase
VAR
	localData : INT;
	activeData : REFERENCE TO INT REF= localData;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{e6663295-a004-4cd8-9b8e-ba3c80dc3fca}" />
    <Property Name="Address" Id="{d9f4f2d6-a451-4f3d-b399-675ccf7ce1e9}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{5087d04c-b7e8-4d27-83ce-93f6edba9c30}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{a9971519-22ed-418b-b2f3-223dbf639d4f}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{37c85a4c-3715-45a4-affe-5676fdc946c4}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_INT(InitialValue := Value));
Clone := pClone^;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{9f83609a-a42c-45f4-a3c3-c95a48d82e7e}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;]]></ST>
      </Implementation>
    </Method>
    <Property Name="IecType" Id="{93df8d16-361c-0589-1f02-56441476a1c3}">
      <Declaration><![CDATA[PROPERTY PUBLIC IecType : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{e4478699-f245-0f2c-0325-791fec8c3d09}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IecType := 'INT';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ReferenceOf" Id="{10808909-7a1b-0eae-399d-be00cd1ce852}">
      <Declaration><![CDATA[METHOD PUBLIC ReferenceOf
VAR_INPUT
	ReferenceTarget : INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeWith" Id="{78bbb435-9f2e-431a-8b4c-405d57f91cbd}">
      <Declaration><![CDATA[METHOD PUBLIC SerializeWith
VAR_INPUT
	Serializer : I_Serializer;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.AddInt(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{31acef3f-a1c0-4d9a-bcfb-ca14a4a2b491}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{23c38faf-f22a-43f5-a149-f7f4a03bec90}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryDeserializeFrom" Id="{69d264a8-dbe3-48fa-a85c-7902fb2ef2a8}">
      <Declaration><![CDATA[METHOD TryDeserializeFrom : BOOL
VAR_INPUT
	Deserializer : I_Deserializer;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryDeserializeFrom := Deserializer.TryGetInt(activeData);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryMakeReferenceOf" Id="{9c0d1585-3764-49dd-8abd-c30f2cd927f2}">
      <Declaration><![CDATA[METHOD TryMakeReferenceOf : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	pTargetData : POINTER TO INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT (Target.IecType = IecType) THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
TryMakeReferenceOf := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{a7292d94-0f0c-4318-b80c-30f7fa487b67}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : INT]]></Declaration>
      <Get Name="Get" Id="{273173e7-de92-441f-b4c2-5d1ca742f0a3}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{d0072a17-05b1-4caf-bb6f-903572100699}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>